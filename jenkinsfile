
//Author: Bhagwat Sapkota
//Genspark training
pipeline {
    agent any
    
    stages {
        stage('Terraform Format Check') {
            steps{
                dir('terraform') {
                    sh 'pwd'
                    sh 'terraform fmt'
                }
            }
        }

        //Initializes terraform files
        stage('Terraform Init') {
            steps{
                dir('terraform'){
                    sh 'pwd'
                    sh 'terraform init'
                }
            }
        }

        //Validate Scripts
        stage('Terraform Validate') {
            steps{
                dir('terraform'){
                    sh 'pwd'
                    sh 'terraform validate'
                }
            }
        }

        stage('Terraform Plan and Apply'){
            steps{
                withAWS(credentials:'bhagwat-new',region:'us-east-2'){
                    dir('terraform'){
                        sh 'pwd'
                        sh 'aws iam list-users'
                        sh 'terraform plan -input=false -out tfplan'
                        //sh 'terraform show -no-color tfplan > tfplan.txt'
                        sh 'pwd'
                        sh 'ls -a'
                        sh 'terraform apply --auto-approve'
                    }
                }
            }
        }

        stage('Deploy NGINx Image'){
            steps{
                withAWS(credentials:'bhagwat-new',region:'us-east-2'){
                    echo 'Deploying docker image...'
                    sh 'aws eks --region us-east-2 update-kubeconfig --name final-cluster'
                    sh 'kubectl get services'
                    sh 'kubectl delete services nginx-service'


                    sh 'kubectl get nodes'
                    sh 'kubectl get pods --all-namespaces'
                    sh 'kubectl apply -f deployment.yml'
                    sh 'kubectl get deployments final-project'
                    sh 'kubectl describe deployments final-project'
                    sh 'kubectl get replicasets'
                    sh 'kubectl describe replicasets'

                    sh 'kubectl expose deployment final-project  --port=80 --target-port=80  --name=nginx-service --type=LoadBalancer'

                    sh 'kubectl get service nginx-service' 
                    sh 'kubectl describe service nginx-service'

                    sh 'kubectl get nodes'
                    sh 'kubectl get pods --output=wide'

                }
            }
        }

        stage('Deploy Dynatrace Agent') {
            steps{
                withAWS(credentials:'bhagwat-new', region:'us-east-2'){
                    echo 'Deploying Dynatrace agent'
                    //sh 'kubectl create namespace dynatrace'
                    //sh 'kubectl apply -f https://github.com/Dynatrace/dynatrace-operator/releases/download/v0.7.2/kubernetes.yaml'
                    sh 'kubectl -n dynatrace wait pod --for=condition=ready --selector=app.kubernetes.io/name=dynatrace-operator,app.kubernetes.io/component=webhook --timeout=300s'
                    sh 'kubectl apply -f dynakube.yaml'
                }
            }
        }
    }
        
    
}
